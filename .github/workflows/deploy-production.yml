name: Deploy to production

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v1
     - name: Build Docker image
       run: docker build . --tag dcatno/fdk-harvest-scheduler:latest --tag eu.gcr.io/fdk-infra/fdk-harvest-scheduler:latest --tag eu.gcr.io/fdk-infra/fdk-harvest-scheduler:production_latest --tag eu.gcr.io/fdk-infra/fdk-harvest-scheduler:$GITHUB_SHA
     - name: Connect to Google Cloud
       uses: actions-hub/gcloud@master
       env:
         PROJECT_ID: fdk-infra
         APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_FDK_JENKINS_GCR }}
       with:
         args: auth configure-docker -q
     - name: Push docker image to Google Cloud
       uses: actions/gcloud/cli@master
       env:
         PROJECT_ID: fdk-infra
         APPLICATION_NAME: myproject
       with:
         runs: "sh -c"
         args: "docker -- push eu.gcr.io/fdk-infra/fdk-harvest-scheduler:$GITHUB_SHA"
     - name: Apply Helm template
       uses: stefanprodan/kube-tools@v1
       with:
         helm: 2.14.3
         command: |
           helm init --client-only
           helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
           helm fetch --untar --untardir ./helm fdk/fdk-harvest-scheduler
           helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/fdk-infra/fdk-harvest-scheduler:$GITHUB_SHA" -f ./helm/fdk-harvest-scheduler/values/production.yaml ./helm/fdk-harvest-scheduler/ > ./kubectlapply.yaml
           cat ./kubectlapply.yaml
           chmod o+w ./kubectlapply.yaml
           cat kubectlapply.yaml
     - name: Get kubeconfig file from GKE
       uses: machine-learning-apps/gke-kubeconfig@master
       with:
         application_credentials: ${{ secrets.FDK_PROD_AUTODEPLOY }}
         project_id: fdk-prod
         location_zone: europe-north1-a
         cluster_name: fdk-prod
     - name: Deploy to production
       uses: docker://bitnami/kubectl:latest
       env:
         KUBECONFIG: '/github/workspace/.kube/config'
       with:
         args: "apply -f ./kubectlapply.yaml --force"
     - name: Notify slack of deploy
       env:
         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
       uses: pullreminders/slack-action@master
       with:
         args: '{\"channel\":\"C7NTH118T\",\"text\":\"Application fdk-harvest-scheduler deployed to production\"}'